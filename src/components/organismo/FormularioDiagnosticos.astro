---
import Button1 from "../atomos/Button1.astro";
import FormCont from "../atomos/FormCont.astro";
import ContenedorInputForm from "../moleculas/ContenedorInputForm.astro";
---

<FormCont title="agregar diagnostico" id="formularioDiagnostico">
  <div class="w-full">
    <ContenedorInputForm
      id="diagnostico"
      label="diagnostico"
      name="diagnostico"
      type="text"
    />
  </div>
  <div class="w-full">
    <label class="text-xs capitalize">observaciones:</label>
    <textarea
      class="flex-1 w-full text-sm p-2 text-primary-texto outline-none ring-0 shadow-md border-gray-300 ring-primary-200/60 focus:ring-1 focus:border-primary-200/60 border rounded-lg"
      rows="5"
      name="observaciones"
      id="observaciones"></textarea>
  </div>
  <div class="w-full flex items-center justify-end">
    <Button1 id="guardarDiagnostico">agregar</Button1>
  </div>
</FormCont>

<script>
  import { atencion } from "../../context/store";
  import { showToast } from "../../utils/toast/toastShow";

  document.addEventListener("DOMContentLoaded", () => {
    const textArea = document.getElementById("observaciones");
    const diagnostico = document.getElementById("diagnostico");
    const btnEnviar = document.getElementById("guardarDiagnostico");

    let dataDiagnostico = {
      diagnostico: {
        diagnostico: "",
        observaciones: "",
      },
      dataIds: {},
    };

    // Actualiza `dataIds` con los datos de la tienda
    atencion.subscribe((state) => {
      dataDiagnostico.dataIds = state.dataIds;
    });

    // Agregar evento al botón
    btnEnviar.addEventListener("click", async (event) => {
      event.preventDefault(); // Evita el envío del formulario por defecto

      // Obtiene valores de los campos
      const diagnosticoValue = diagnostico.value.trim();
      const observacionesValue = textArea.value.trim();

      if (!diagnosticoValue || !observacionesValue) {
        showToast("Por favor, completa todos los campos", {
          background: "bg-primary-400",
        });
        return;
      }

      // Asigna valores al objeto
      dataDiagnostico.diagnostico.diagnostico = diagnosticoValue;
      dataDiagnostico.diagnostico.observaciones = observacionesValue;

      try {
        // Envía los datos al endpoint
        const response = await fetch("/api/pacientes/atencion/diagnostico", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(dataDiagnostico),
        });

        if (!response.ok) {
          throw new Error("Error al enviar los datos");
        }

        const result = await response.json();
        console.log("Resultado:", result);
        showToast("Diagnóstico guardado correctamente", {
          background: "bg-green-500",
        });
        document.location.reload(); // Recarga la página después de guardar
      } catch (error) {
        console.error("Error al enviar el diagnóstico:", error);
        showToast("Error al guardar el diagnóstico", {
          background: "bg-red-500",
        });
      }
    });
  });
</script>
