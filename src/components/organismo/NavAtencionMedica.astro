---
import SignosVitalesForm from "../../pages/dashboard/consultas/aperturaPaciente/[pacienteId]/SignosVitalesForm.astro";
import type { pacienteType } from "../../types";
import Button1 from "../atomos/Button1.astro";
import ButtonBackHistory from "../atomos/ButtonBackHistory.astro";
import H2 from "../atomos/H2.astro";
import CardAntecedentes from "../moleculas/CardAntecedentes.astro";
import CardAntecedentesEnAtencion from "../moleculas/CardAntecedentesEnAtencion.astro";

const { pacienteData, isExistHC, dataIds ,antecedentes} = Astro.props as pacienteType;
const nowDate = new Date().toLocaleDateString();
const personalConditions = antecedentes.filter((c) => c.tipo === "personal");
const familyConditions = antecedentes.filter((c) => c.tipo === "familiar");
---

<div
  class="h relative border py-4 px-4 bg-white rounded-lg text-sm w-full flex flex-col items-center justify-evenly text-primary-texto px- mb-2 gap-y-2"
>
  <div class="flex w-full md:flex-row items-stretch md:items-center mb-4 flex-1">
    <!-- boton de vovler history -->
    <ButtonBackHistory />
    <div
      class="flex w-full h-full items-center md:gap-2 justify-start  gap-y-2 ml-2"
    >
     
      <!-- datos personales -->
      <div class="flex border-x px-3 w-1/3 items-center text-xs font- justify-start flex-wrap gap-2"
      >
        <p>
        Nombre y Apellido: <span class="text-primary-textoTitle font-bold"
            >{`${pacienteData.nombre} ${pacienteData.apellido}`}</span
          >
        </p>
        <p>
          DNI: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.dni}</span
          >
        </p>
        <p>
          Sexo: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.sexo}</span
          >
        </p>
        <p>
          Celular: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.celular}</span
          >
        </p>
        <p>
          Email: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.email}</span
          >
        </p>
        <p>
          Obra Social: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.obraSocial}</span
          >
        </p>
        <p>
          Estatura: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.estatura}</span
          >
        </p>
        <p>
          Domicilio: <span class="text-primary-textoTitle font-bold"
            >{pacienteData.domicilio}</span
          >
        </p>
      </div>
      <!-- antecedentes -->
      <div class="gap-y-1 flex gap-2 flex-wrap w- px-3 border-r">
        <div >
          <h3 class="text-xs   mb-1">Antecedentes Personales</h3>
          <div class="space-y-1 ">
            {
              personalConditions.map((diag, index) => (
                <CardAntecedentesEnAtencion data={diag} />
              ))
            }
          </div>
        </div>
    
        <div class="">
          <h3 class="text-xs   mb-1">Antecedentes Familiares</h3>
          <div class="space-y-1 ">
            {
              familyConditions.map((diag, index) => (
                <CardAntecedentesEnAtencion data={diag} />
              ))
            }
          </div>
        </div>
      </div>
    </div>
    <div class="flex flex-col gap-3">
      <Button1 id="finalizarConsulta">finalizar consulta</Button1>
      <Button1>Ficha del Paciente</Button1>
    </div>
    <div
      class="flex bg-white px-3 py-2 rounded-2xl border gap-3 md:fixed bottom-5 left-[40%]"
    >
      <Button1 id="finalizarConsulta">finalizar consulta</Button1>
      <Button1>Ficha del Paciente</Button1>
    </div>
  </div>
  <SignosVitalesForm dataIds={dataIds} isExistHC={isExistHC ? isExistHC : ""} />
</div>

<script>
  import { atencion } from "../../context/store";
  import { showToast } from "../../utils/toast/toastShow";
  let contextoAtencion = atencion.get();

  const btnFinalizar = document.getElementById("finalizarConsulta");

  let dataAtencion = {};
  atencion.subscribe((state) => {
    dataAtencion = state;
    console.log(state);
  });

  btnFinalizar?.addEventListener("click", async () => {
    try {
      const finalizar = await fetch("/api/pacientes/atencion/", {
        method: "POST",
        body: JSON.stringify({
          data: dataAtencion,
          msg: "finalizar consulta",
        }),
      });
      const data = await finalizar.json();

      if (data.status == 200) {
        showToast("atecion cerrada");
        document.location.href = "/dashboard/";
      }
    } catch (error) {
      console.log(error);
    }
  });
</script>
