---
import { desc, eq,sql } from "drizzle-orm";
import MainDashboard from "../../../../components/atomos/MainDashboard.astro";
import LayoutDash from "../../../../components/layouts/LayoutDash.astro";
import HistorialVisitaPaciente from "../../../../components/organismo/HistorialVisitaPaciente.astro";
import ObservacionesDoctorHistorial from "../../../../components/organismo/ObservacionesDoctorHistorial.astro";
import db from "../../../../db";
import {
  diagnostico,
  historiaClinica,
  medicamento,
  pacientes,
  tratamiento,
  antecedente
} from "../../../../db/schema";
import type { AntecedentesMedicosProps, pacienteType } from "../../../../types";
import PacienteHeader from "../../../../components/organismo/PacienteHeader.astro";
import MedicacionFichaPaciente from "../../../../components/organismo/MedicacionFichaPaciente.astro";
import Antecedentes from "../../../../components/organismo/Antecedentes.astro";
import Div1Atencion from "../../../../components/atomos/Div1Atencion.astro";
import Div2Atencion from "../../../../components/atomos/Div2Atencion.astro";
import ArchivosAdjuntosPaciente from "../../../../components/organismo/ArchivosAdjuntosPaciente.astro";

const { pacienteId } = Astro.params;

let pacienteData: pacienteType = {};
let medicamentosData = {};
let arrayAntecedente:AntecedentesMedicosProps = [];
let historialVisitas = [];
const medicalHistory = [
  {
    condition: "Hipertensión Arterial",
    diagnosisDate: "15 Enero 2022",
    status: "Controlado",
    type: "personal",
    critical: true,
  },
  {
    condition: "Diabetes Tipo 2",
    diagnosisDate: "3 Marzo 2021",
    status: "En tratamiento",
    type: "personal",
  },
  {
    condition: "Antecedente de Cáncer de Mama",
    diagnosisDate: "10 Enero 2020",
    status: "Familiar",
    type: "family",
  },
];

const doctorNotes = [
  {
    date: "12 Mar 2024",
    doctor: "Dr. Juan Pérez",
    content:
      "Paciente presenta mejora en niveles de glucosa. Se mantiene tratamiento actual. Próximo control en 3 meses.",
  },
  {
    date: "25 Feb 2024",
    doctor: "Dra. Ana López",
    content:
      "Cefalea tensional. Se recomienda ejercicios de relajación y seguimiento de patrones de sueño. Control en 2 semanas si persisten los síntomas.",
  },
];

try {
  pacienteData = (
    await db.select().from(pacientes).where(eq(pacientes.id, pacienteId))
  ).at(0);
  medicamentosData = await db
    .select()
    .from(medicamento)
    .where(eq(medicamento.pacienteId, pacienteId))
    .orderBy(desc(medicamento.created_at));

  historialVisitas = await db
    .select({
      fecha: historiaClinica.created_at,
      motivo: historiaClinica.motivoConsulta,
      diagnosticos: sql`GROUP_CONCAT(${diagnostico.diagnostico}, ', ')`.as(
        "diagnosticos"
      ),
      tratamiento: tratamiento.tratamiento,
    })
    .from(historiaClinica)
    .rightJoin(
      tratamiento,
      eq(tratamiento.historiaClinicaId, historiaClinica.id)
    )
    .rightJoin(
      diagnostico,
      eq(diagnostico.historiaClinicaId, historiaClinica.id)
    )
    .where(eq(historiaClinica.pacienteId, pacienteId))
    .groupBy(historiaClinica.id)
    .orderBy(desc(historiaClinica.created_at)); // Agrupa por la historia clínica

    arrayAntecedente=await db.select().from(antecedente).where(eq(antecedente.pacienteId,pacienteId))

  //  console.log("este son los historialVisitas",arrayAntecedente);

  if (!pacienteData) {
    console.log("paciente no encontrado");
    return;
  }
} catch (error) {
  console.log(error);
}

// const {patientData,medicalHistory,recentVisits,medications,doctorNotes}=Astro.props

const documents = [
    {
      nombre: "Análisis de sangre",
      tipo: "laboratorios" as const,
      fecha: "15 Mar 2024",
      tamaño: "2.4 MB",
      estado: "revisar" as const
    },
    {
      nombre: "Radiografía de tórax",
      tipo: "rayosx" as const,
      fecha: "10 Mar 2024",
      tamaño: "5.1 MB",
      estado: "pendiente" as const
    },
    {
      nombre: "Receta médica",
      tipo: "prescripcion" as const,
      fecha: "12 Mar 2024",
      tamaño: "512 KB",
      estado: "archivado" as const
    }
  ];
---

<LayoutDash>
  <MainDashboard>
    <div class="container py-4 gap-4 px-2 flex flex-col w-full">
      <PacienteHeader {...pacienteData} />

      <div class="flex gap-4">
        <Div1Atencion>
          <Div2Atencion>
            <Antecedentes antecedentes={arrayAntecedente} />
          </Div2Atencion>
          <HistorialVisitaPaciente visitas={historialVisitas} />
        </Div1Atencion>
        <Div1Atencion>
          <MedicacionFichaPaciente medicacion={medicamentosData} />
          <ArchivosAdjuntosPaciente documentos={documents}/>
          <ObservacionesDoctorHistorial notes={doctorNotes} />
        </Div1Atencion>
      </div>
    </div>
  </MainDashboard>
</LayoutDash>
