---
import { desc, eq, sql } from "drizzle-orm";
import MainDashboard from "../../../../components/atomos/MainDashboard.astro";
import LayoutDash from "../../../../components/layouts/LayoutDash.astro";
import HistorialVisitaPaciente from "../../../../components/organismo/HistorialVisitaPaciente.astro";
import db from "../../../../db";
import {
  diagnostico,
  medicamento,
  pacientes,
  antecedente,
  archivosAdjuntos,
  atenciones,
} from "../../../../db/schema";
import type {
  AntecedentesMedicosProps,
  DocumentosAdjuntosProps,
  pacienteType,
} from "../../../../types";
import PacienteHeader from "../../../../components/organismo/PacienteHeader.astro";
import MedicacionFichaPaciente from "../../../../components/organismo/MedicacionFichaPaciente.astro";
import Antecedentes from "../../../../components/organismo/Antecedentes.astro";
import Div1Atencion from "../../../../components/atomos/Div1Atencion.astro";
import ArchivosAdjuntosPaciente from "../../../../components/organismo/ArchivosAdjuntosPaciente.astro";
import DivBox1 from "../../../../components/atomos/DivBox1.astro";
import NotasMedicas from "../../../../components/organismo/NotasMedicas.astro";
import { notasMedicas } from "../../../../db/schema/notasMedicas";
import ContenedorCharts from "../../../../components/moleculas/ContenedorCharts.astro";
import Button1 from "../../../../components/atomos/Button1.astro";

const { pacienteId } = Astro.params;
const userId = "sakflsdk";


export async function getPacienteData(pacienteId:string) {
  try {
    const result = await db.transaction(async (trx) => {
      // Consulta del paciente
      const pacienteData =( await trx
        .select()
        .from(pacientes)
        .where(eq(pacientes.id, pacienteId))).at(0);

      if (!pacienteData) {
        throw new Error("Paciente no encontrado");
      }

      // Medicamentos asociados
      const medicamentosData = await trx
        .select()
        .from(medicamento)
        .where(eq(medicamento.pacienteId, pacienteId))
        .orderBy(desc(medicamento.created_at));

      // Historial de visitas
      const historialVisitas = await trx
        .select({
          fecha: atenciones.created_at,
          motivo: atenciones.motivoConsulta,
          diagnosticos: sql`GROUP_CONCAT(${diagnostico.diagnostico}, ', ')`.as(
            "diagnosticos"
          ),
          tratamiento: atenciones.tratamiento,
        })
        .from(atenciones)
        .rightJoin(diagnostico,eq(diagnostico.atencionId,atenciones.id))
        .where(eq(atenciones.pacienteId, pacienteId))
        .groupBy(atenciones.id)
        .orderBy(desc(atenciones.created_at));

      // Antecedentes
      const arrayAntecedente = await trx
        .select()
        .from(antecedente)
        .where(eq(antecedente.pacienteId, pacienteId));

      // Archivos adjuntos
      const arrayArchivosAdjuntos = await trx
        .select()
        .from(archivosAdjuntos)
        .where(eq(archivosAdjuntos.pacienteId, pacienteId))
        .orderBy(desc(archivosAdjuntos.created_at));

      // Notas médicas
      const arrayNotasMedicas = await trx
        .select()
        .from(notasMedicas)
        .where(eq(notasMedicas.pacienteId, pacienteId))
        .orderBy(desc(notasMedicas.created_at));

      // Devuelve todos los resultados juntos
      return {
        pacienteData,
        medicamentosData,
        historialVisitas,
        arrayAntecedente,
        arrayArchivosAdjuntos,
        arrayNotasMedicas,
      };
    });

    return result; // Transacción exitosa
  } catch (error) {
    console.error("Error en la transacción:", error);
    throw new Error("Ocurrió un error al procesar la solicitud");
  }
}

const {arrayAntecedente,arrayArchivosAdjuntos,arrayNotasMedicas,historialVisitas,medicamentosData,pacienteData}=await getPacienteData(pacienteId)

---

<LayoutDash>
  <MainDashboard h1="Ficha del paciente">
    <div class="container py-4 gap-2 px-2 flex flex-col w- w-[97%]">
      <PacienteHeader {...pacienteData} />
      <!-- <ContenedoresProgresoHistorial client:load/> -->
      <DivBox1 class="w-full text-primary-texto">
        <details class="w-full tex-center flex items-center justify-center">
          <summary
            class="px-2 py-0 bg-primary-bacSidebar shadow- shadow-primary-100 cursor-pointer w-full text-sm font-semibold text-center flex items-center justify-between"
            ><p>Pogresos</p><Button1>ver más</Button1></summary
          >
          <ContenedorCharts />
        </details>
      </DivBox1>
      <div class="flex w-full items-start justify-normal gap-4">
        <Div1Atencion>
          <DivBox1>
            <Antecedentes antecedentes={arrayAntecedente} />
          </DivBox1>
          <HistorialVisitaPaciente visitas={historialVisitas} />
        </Div1Atencion>
        <Div1Atencion>
          <MedicacionFichaPaciente medicacion={medicamentosData} />
          <ArchivosAdjuntosPaciente documentos={arrayArchivosAdjuntos} />
          <NotasMedicas userId={userId} notes={arrayNotasMedicas} />
        </Div1Atencion>
      </div>
    </div>
  </MainDashboard>
</LayoutDash>
