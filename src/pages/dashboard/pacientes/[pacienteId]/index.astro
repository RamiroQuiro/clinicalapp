---
import { desc, eq,sql } from "drizzle-orm";
import MainDashboard from "../../../../components/atomos/MainDashboard.astro";
import LayoutDash from "../../../../components/layouts/LayoutDash.astro";
import HistorialVisitaPaciente from "../../../../components/organismo/HistorialVisitaPaciente.astro";
import db from "../../../../db";
import {
  diagnostico,
  historiaClinica,
  medicamento,
  pacientes,
  tratamiento,
  antecedente,
archivosAdjuntos
} from "../../../../db/schema";
import type { AntecedentesMedicosProps, DocumentosAdjuntosProps, pacienteType } from "../../../../types";
import PacienteHeader from "../../../../components/organismo/PacienteHeader.astro";
import MedicacionFichaPaciente from "../../../../components/organismo/MedicacionFichaPaciente.astro";
import Antecedentes from "../../../../components/organismo/Antecedentes.astro";
import Div1Atencion from "../../../../components/atomos/Div1Atencion.astro";
import ArchivosAdjuntosPaciente from "../../../../components/organismo/ArchivosAdjuntosPaciente.astro";
import DivBox1 from "../../../../components/atomos/DivBox1.astro";
import NotasMedicas from "../../../../components/organismo/NotasMedicas.astro";
import { notasMedicas } from "../../../../db/schema/notasMedicas";

const { pacienteId } = Astro.params;
const userId='dfsdfsds'

let pacienteData: pacienteType = {};
let medicamentosData = {};
let arrayAntecedente:AntecedentesMedicosProps = [];
let historialVisitas = [];
let arrayArchivosAdjuntos :DocumentosAdjuntosProps = [];
let arrayNotasMedicas=[]

const doctorNotes = [
  {
    date: "12 Mar 2024",
    doctor: "Dr. Juan Pérez",
    content:
      "Paciente presenta mejora en niveles de glucosa. Se mantiene tratamiento actual. Próximo control en 3 meses.",
  },
  {
    date: "25 Feb 2024",
    doctor: "Dra. Ana López",
    content:
      "Cefalea tensional. Se recomienda ejercicios de relajación y seguimiento de patrones de sueño. Control en 2 semanas si persisten los síntomas.",
  },
];

try {
  pacienteData = (
    await db.select().from(pacientes).where(eq(pacientes.id, pacienteId))
  ).at(0);
  medicamentosData = await db
    .select()
    .from(medicamento)
    .where(eq(medicamento.pacienteId, pacienteId))
    .orderBy(desc(medicamento.created_at));

  historialVisitas = await db
    .select({
      fecha: historiaClinica.created_at,
      motivo: historiaClinica.motivoConsulta,
      diagnosticos: sql`GROUP_CONCAT(${diagnostico.diagnostico}, ', ')`.as(
        "diagnosticos"
      ),
      tratamiento: tratamiento.tratamiento,
    })
    .from(historiaClinica)
    .rightJoin(
      tratamiento,
      eq(tratamiento.historiaClinicaId, historiaClinica.id)
    )
    .rightJoin(
      diagnostico,
      eq(diagnostico.historiaClinicaId, historiaClinica.id)
    )
    .where(eq(historiaClinica.pacienteId, pacienteId))
    .groupBy(historiaClinica.id)
    .orderBy(desc(historiaClinica.created_at)); // Agrupa por la historia clínica

    arrayAntecedente=await db.select().from(antecedente).where(eq(antecedente.pacienteId,pacienteId))

    arrayArchivosAdjuntos=await db.select().from(archivosAdjuntos).where(eq(archivosAdjuntos.pacienteId,pacienteId)).orderBy(desc(archivosAdjuntos.created_at))
    arrayNotasMedicas=await db.select().from(notasMedicas).where(eq(notasMedicas.pacienteId,pacienteId)).orderBy(desc(notasMedicas.created_at))

   console.log("este son los historialVisitas",arrayNotasMedicas);

  if (!pacienteData) {
    console.log("paciente no encontrado");
    return;
  }
} catch (error) {
  console.log(error);
}

// const {patientData,medicalHistory,recentVisits,medications,doctorNotes}=Astro.props

---

<LayoutDash>
  <MainDashboard>
    <div class="container py-4 gap-4 px-2 flex flex-col w-full">
      <PacienteHeader {...pacienteData} />

      <div class="flex gap-4">
        <Div1Atencion>
          <DivBox1>
            <Antecedentes antecedentes={arrayAntecedente} />
          </DivBox1>
          <HistorialVisitaPaciente visitas={historialVisitas} />
        </Div1Atencion>
        <Div1Atencion>
          <MedicacionFichaPaciente medicacion={medicamentosData} />
          <ArchivosAdjuntosPaciente documentos={arrayArchivosAdjuntos}/>
          <NotasMedicas userId={userId} notes={arrayNotasMedicas} />
        </Div1Atencion>
      </div>
    </div>
  </MainDashboard>
</LayoutDash>
