---
import NavAtencionMedicaV2 from '@/components/organismo/NavAtencionMedicaV2.tsx';
import { logAuditEvent } from '@/lib/audit';
import { getDatosNuevaAtencion } from '@/services/atenciones.services';
import Contenedor from './componenteAtencionV2/Contenedor.tsx';

const { pacienteId, atencionId } = Astro.params;
const { user, session } = Astro.locals;

let esFinalizada = false;
let data, error, message;

// 1. Seguridad: Validar sesión y obtener datos UNA SOLA VEZ
if (session && user) {
  const result = await getDatosNuevaAtencion(pacienteId as string, atencionId as string);
  data = result.data;
  error = result.error;
  message = result.message;

  if (error) {
    console.log('error', error, message);
  } else if (data) {
    esFinalizada = data.atencion?.estado === 'finalizada';
    // 2. Auditoría: Registrar el acceso a los datos de la atención
    const ipAddress = Astro.request.headers.get('x-forwarded-for') || undefined;
    const userAgent = Astro.request.headers.get('user-agent') || undefined;

    await logAuditEvent({
      userId: user.id,
      actionType: 'VIEW',
      tableName: 'atenciones',
      recordId: atencionId,
      description: `El usuario ${user.nombre} ${user.apellido} (${user.email}) cargó los datos de la atención con ID ${atencionId} para la vista de consulta.`,
      ipAddress,
      userAgent,
    });
  }
}
---

<div class="p gap-2 flex flex-col w-full" id="containerAtencion">
  {
    !session || !user ? (
      <div>No autorizado</div>
    ) : error ? (
      <div>{message}</div>
    ) : (
      <>
        <NavAtencionMedicaV2
          client:load
          pacienteData={data?.paciente}
          esFinalizada={esFinalizada}
          pacienteId={pacienteId}
          atencionId={atencionId}
        />
        <div class="w-full flex flex-col">
          <Contenedor client:load data={data} esFinalizada={esFinalizada} />
        </div>
      </>
    )
  }
</div>
